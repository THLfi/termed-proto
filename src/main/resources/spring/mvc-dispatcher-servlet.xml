<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc
       	http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context
       	http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util-4.0.xsd">

    <context:annotation-config/>

    <context:component-scan base-package="fi.thl.termed.controller, fi.thl.termed.service"/>

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
        <property name="locations">
            <list>
                <value>classpath:app.properties</value>
                <value>file:${propertyFilePath}</value>
            </list>
        </property>
    </bean>

    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean class="fi.thl.termed.util.GsonHttpMessageConverter"/>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <bean id="entityManagerFactory"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
          depends-on="flyway">
        <property name="dataSource" ref="dataSource"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
        </property>
        <property name="packagesToScan" value="fi.thl.termed.model"/>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.search.default.directory_provider">
                    ${hibernate.search.default.directory_provider}
                </prop>
                <prop key="hibernate.search.default.indexBase">
                    ${hibernate.search.default.indexBase}
                </prop>
                <prop key="hibernate.search.lucene_version">LUCENE_36</prop>
                <prop key="hibernate.default_schema">${database.schema}</prop>
                <prop key="hibernate.ejb.naming_strategy">
                    fi.thl.termed.util.UnderscoreHibernateNamingStrategy
                </prop>
            </props>
        </property>
    </bean>

    <bean id="flyway" class="org.flywaydb.core.Flyway" init-method="migrate" lazy-init="false">
        <property name="dataSource" ref="dataSource"/>
        <property name="schemas" value="${database.schema}"/>
        <property name="placeholders">
            <map>
                <entry key="schema" value="${database.schema}"/>
            </map>
        </property>
    </bean>

    <bean id="dataSource" destroy-method="close"
          class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <util:map id="collectionClassMap" value-type="java.lang.Class">
        <entry key="schemes" value="fi.thl.termed.model.Scheme"/>
        <entry key="concepts" value="fi.thl.termed.model.Concept"/>
        <entry key="collections" value="fi.thl.termed.model.Collection"/>
        <entry key="properties" value="fi.thl.termed.model.Property"/>
        <entry key="conceptReferenceTypes" value="fi.thl.termed.model.ConceptReferenceType"/>
    </util:map>

</beans>
